= YAJL C Bindings for Ruby (work in progress)

This gem (although not in gem form just yet) is a C binding to the excellent YAJL JSON parsing library.

You can read more info at the projects website http://lloydforge.org/projects/yajl or check out it's codes at http://github.com/lloyd/yajl.

== Example of use

For now, just check out the benchmark.rb script.
Basically Yajl::Native.parse accepts a single parameter, which is a descendant of IO that responds to read(size, buffer)

== How to install

I'm still working on the Hash generation, but you'll be able to install it like any other github gem when I get that finished.

== Benchmarks

My preliminary benchmarks show ~20x-30x (depending on the number of iterations) speed increase over the current JSON C gem available in widespread use in many, many ruby libraries.

Here are a few runs of my benchmark script:

 ************************************************************
 Starting benchmark parsing 273616 bytes of JSON data 1 times
 
       user     system      total        real
 Yajl::Native.parse (C)
   0.000000   0.000000   0.000000 (  0.000810)
 
 JSON.parser
   0.020000   0.000000   0.020000 (  0.025164)
 
 ActiveSupport::JSON.decode
   0.310000   0.010000   0.320000 (  0.317973)
 
 
 *************************************************************
 Starting benchmark parsing 273616 bytes of JSON data 10 times
 
      user     system      total        real
 Yajl::Native.parse (C)
  0.000000   0.010000   0.010000 (  0.011361)
 
 JSON.parser
  0.270000   0.010000   0.280000 (  0.280775)
 
 ActiveSupport::JSON.decode
  3.290000   0.040000   3.330000 (  3.371930)
 
 
 ***************************************************************
 Starting benchmark parsing 273616 bytes of JSON data 1000 times
 
  user       system     total           real
 Yajl::Native.parse (C)
  0.700000   0.330000   1.030000 (  1.032675)
 
 JSON.parser
  26.850000  0.980000  27.830000 ( 28.136791)
 
 ActiveSupport::JSON.decode
 326.510000  4.010000 330.520000 (334.404886)

But you get the idea...